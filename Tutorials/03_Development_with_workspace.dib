#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"languageName":"csharp","name":"csharp"}]}}

#!markdown

Create new empty directory where WORKSPACE will be created. 
Clio will not create workspace when directory is not empty.

#!pwsh

New-Item -ItemType Directory -Force -Path "./../../Workspace";
Set-Location -Path "./../../Workspace";

#!markdown

Use Clio to [Create new workplace](https://github.com/Advance-Technologies-Foundation/clio#workspaces)

#!pwsh

clio createw;

#!markdown

<details>
<summary>Directory structure will be created as below:</summary>

ðŸ“¦Workspace</br>
 â”£ ðŸ“‚.application</br>
 â”£ ðŸ“‚.clio - Contains clio configuration files</br>
 â”ƒ â”£ [ðŸ“œclioignore](./../Workspace/.clio/clioignore) - Defines ignore files when generating **gz** archive file, works same as **.gitignore**</br>
 â”ƒ â”£ ðŸ“œplaceholder.txt - you can delete it</br>
 â”ƒ â”£ [ðŸ“œworkspaceEnvironmentSettings.json](./../Workspace/.clio/workspaceEnvironmentSettings.json) - Defines mapping between the current workspace and Creatio instance</br>
 â”ƒ â”— [ðŸ“œworkspaceSettings.json](./../Workspace/.clio/workspaceSettings.json) - Defines list of packages that the workspace will manage</br>
 â”£ ðŸ“‚.nuget</br>
 â”£ ðŸ“‚.solution</br>
 â”£ ðŸ“‚builds</br>
 â”£ ðŸ“‚packages</br>
 â”£ ðŸ“‚tasks</br>
 â”ƒ â”£ [ðŸ“œbuild-framework-sdk.cmd](./../Workspace/tasks/build-framework-sdk.cmd)</br>
 â”ƒ â”£ [ðŸ“œbuild-framework.cmd](./../Workspace/tasks/build-framework.cmd)</br>
 â”ƒ â”£ ðŸ“œbuild-netcore-sdk.cmd</br>
 â”ƒ â”£ ðŸ“œbuild-netcore-sdk.sh</br>
 â”ƒ â”£ ðŸ“œbuild-netcore.cmd</br>
 â”ƒ â”£ ðŸ“œbuild-netcore.sh</br>
 â”ƒ â”£ ðŸ“œenv-to-git.cmd</br>
 â”ƒ â”£ ðŸ“œgit-init-dev-branch.cmd</br>
 â”ƒ â”£ ðŸ“œgit-init-workspace.cmd</br>
 â”ƒ â”£ ðŸ“œgit-to-env.cmd</br>
 â”ƒ â”£ [ðŸ“œopen-solution-framework-sdk.cmd](./../Workspace/tasks/open-solution-framework-sdk.cmd) - Opens solution targeting **net472** with CreatioSDK nuget</br>
 â”ƒ â”£ [ðŸ“œopen-solution-framework.cmd](./../Workspace/tasks/open-solution-framework.cmd) - Opens solution targeting **net472** with direct dll refs (no nuget)</br>
 â”ƒ â”£ [ðŸ“œopen-solution-netcore-sdk.cmd](./../Workspace/tasks/open-solution-netcore-sdk.cmd)- Opens solution targeting **netstandard2.0** with CreatioSDK nuget</br>
 â”ƒ â”£ [ðŸ“œopen-solution-netcore.cmd](./../Workspace/tasks/open-solution-netcore.cmd) - Opens solution targeting **netstandard2.0** with direct dll refs (no nuget)</br>
 â”ƒ â”£ ðŸ“œrun-all-platfrom-build-sdk.cmd</br>
 â”ƒ â”— ðŸ“œrun-all-platfrom-build.cmd</br>
 â”— [ðŸ“œ.gitlab-ci.yml](./../Workspace/.gitlab-ci.yml)</br>

 </details>

#!markdown

- Edit [ðŸ“œworkspaceSettings.json](./../../Workspace/.clio/workspaceSettings.json) to add packages that the workspace will manage.
- Edit [ðŸ“œworkspaceEnvironmentSettings.json](./../../Workspace/.clio/workspaceSettings.json) to attach workspace to an creatio environment
  Attach Workspace to demo environment
  ```json
  {
    "Environment": "demo"
  }
  ```

Download configuration files from remote Creatio instance (i.e demo)

#!csharp

clio dconf -e demo
